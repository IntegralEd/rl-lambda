AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless application for Recursive Learning's Lambda backend
Globals:
  Function:
    Timeout: 180
    MemorySize: 256
    Runtime: nodejs18.x
    Environment:
      Variables:
        NODE_ENV: production
    Tracing: Active
    Tags:
      Project: RecursiveLearning
      Environment: Production
Resources:
  RecursiveLearningApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: RecursiveLearningApi
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins:
        - https://recursivelearning.app
        AllowMethods:
        - POST
        - OPTIONS
        AllowHeaders:
        - Content-Type
        - X-Amz-Date
        - Authorization
        - X-Api-Key
        - X-Amz-Security-Token
        ExposeHeaders:
        - Access-Control-Allow-Origin
        - Access-Control-Allow-Methods
        - Access-Control-Allow-Headers
        - Access-Control-Max-Age
        MaxAge: 300
  RecursiveLearningApiDefaultStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: RecursiveLearningApi
      StageName: $default
      AutoDeploy: true
  rllambda2025Chat:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: rllambda2025Chat
      Handler: index.handler
      Role:
        Fn::GetAtt:
        - rllambda2025ChatRole
        - Arn
      Architectures:
      - arm64
    Metadata:
      SamResourceId: rllambda2025Chat
  rllambda2025ChatRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: SSMParameterAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParameter
            - ssm:GetParameters
            Resource:
            - Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/integraled/central/*
  rllambda2025ChatAPIPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - rllambda2025Chat
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RecursiveLearningApi}/*/*/chat
  ChatIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: RecursiveLearningApi
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
        - rllambda2025Chat
        - Arn
      PayloadFormatVersion: 2.0
  ChatRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: RecursiveLearningApi
      RouteKey: POST /chat
      Target:
        Fn::Sub: integrations/${ChatIntegration}
  ChatOptionsRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: RecursiveLearningApi
      RouteKey: OPTIONS /chat
      Target:
        Fn::Sub: integrations/${ChatIntegration}
Outputs:
  RecursiveLearningApiEndpoint:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${RecursiveLearningApi}.execute-api.${AWS::Region}.amazonaws.com/
  RecursiveLearningApiId:
    Description: API Gateway ID
    Value:
      Ref: RecursiveLearningApi
  RecursiveLearningLambdaArn:
    Description: Lambda function ARN
    Value:
      Fn::GetAtt:
      - rllambda2025Chat
      - Arn
